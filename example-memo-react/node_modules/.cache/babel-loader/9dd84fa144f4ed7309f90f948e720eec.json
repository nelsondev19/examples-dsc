{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nelson/Escritorio/examples-dsc/example-memo-react/src/components/Cards/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useInfiniteScroll } from \"../../hooks/useInfiniteScroll\";\n\nfunction Cards() {\n  _s();\n\n  const [Loading, setLoading] = useState(false);\n  const [data, setdata] = useState([]);\n  const [pageNumber, setpageNumber] = useState(10);\n  const [error, setError] = useState(false);\n  const [element, setElement] = React.useState(null);\n\n  const load = () => {\n    setTimeout(() => {\n      setpageNumber(pageNumber + 10);\n    }, 300);\n  };\n\n  useInfiniteScroll({\n    element: element,\n    fetch: load\n  });\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: \"GET\",\n      url: \"https://rickandmortyapi.com/api/character/\",\n      params: {\n        page: pageNumber\n      },\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setdata(prevCharacters => {\n        return [...new Set([...prevCharacters, ...res.data.results.map(b => b)])];\n      });\n      setLoading(false);\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      setError(true);\n    });\n    return () => cancel();\n  }, [pageNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [data.map(row => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          background: \"orange\"\n        },\n        children: row.name\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)), Loading && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), !Loading && /*#__PURE__*/_jsxDEV(\"li\", {\n        ref: setElement,\n        style: {\n          background: \"transparent\"\n        },\n        children: \"Cargando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cards, \"Zw0eLbQ379PrmUoJi3t4yo5vXF8=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/home/nelson/Escritorio/examples-dsc/example-memo-react/src/components/Cards/index.js"],"names":["React","useEffect","useState","axios","useInfiniteScroll","Cards","Loading","setLoading","data","setdata","pageNumber","setpageNumber","error","setError","element","setElement","load","setTimeout","fetch","cancel","method","url","params","page","cancelToken","CancelToken","c","then","res","prevCharacters","Set","results","map","b","catch","e","isCancel","row","background","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useInfiniteScroll } from \"../../hooks/useInfiniteScroll\";\n\nfunction Cards() {\n  const [Loading, setLoading] = useState(false);\n  const [data, setdata] = useState([]);\n  const [pageNumber, setpageNumber] = useState(10);\n  const [error, setError] = useState(false);\n\n  const [element, setElement] = React.useState(null);\n\n  const load = () => {\n    setTimeout(() => {\n      setpageNumber(pageNumber + 10);\n    }, 300);\n  };\n  useInfiniteScroll({ element: element, fetch: load });\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: \"GET\",\n      url: \"https://rickandmortyapi.com/api/character/\",\n      params: { page: pageNumber },\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    })\n      .then((res) => {\n        setdata((prevCharacters) => {\n          return [\n            ...new Set([...prevCharacters, ...res.data.results.map((b) => b)]),\n          ];\n        });\n        setLoading(false);\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        setError(true);\n      });\n    return () => cancel();\n  }, [pageNumber]);\n\n  return (\n    <div className=\"App\">\n      <ul>\n        {data.map((row) => (\n          <li key={row.id} style={{ background: \"orange\" }}>\n            {row.name}\n          </li>\n        ))}\n\n        {Loading && <li>Cargando...</li>}\n\n        {error && <li>{error}</li>}\n\n        {!Loading && (\n          <li ref={setElement} style={{ background: \"transparent\" }}>\n            Cargando\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}