{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nexport const useInfiniteScroll = ({\n  element,\n  fetch\n}) => {\n  _s();\n\n  const loader = useRef(fetch);\n  const observer = useRef(new IntersectionObserver(entries => {\n    const first = entries[0];\n\n    if (first.isIntersecting) {\n      loader.current();\n      console.log('Hola');\n    }\n  }, {\n    threshold: 1\n  }));\n  useEffect(() => {\n    loader.current = fetch;\n  }, [fetch]);\n  useEffect(() => {\n    const currentElement = element;\n    const currentObserver = observer.current;\n\n    if (currentElement) {\n      currentObserver.observe(currentElement);\n    }\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  }, [element]);\n};\n\n_s(useInfiniteScroll, \"m3/8Uy2W0vdOrSZGgITeFhtIMdM=\");","map":{"version":3,"sources":["/home/nelson/Escritorio/examples-dsc/example-memo-react/src/hooks/useInfiniteScroll.js"],"names":["useRef","useEffect","useInfiniteScroll","element","fetch","loader","observer","IntersectionObserver","entries","first","isIntersecting","current","console","log","threshold","currentElement","currentObserver","observe","unobserve"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAAA;;AACvD,QAAMC,MAAM,GAAGL,MAAM,CAACI,KAAD,CAArB;AAEA,QAAME,QAAQ,GAAGN,MAAM,CACrB,IAAIO,oBAAJ,CACGC,OAAD,IAAa;AACX,UAAMC,KAAK,GAAGD,OAAO,CAAC,CAAD,CAArB;;AACA,QAAIC,KAAK,CAACC,cAAV,EAA0B;AACxBL,MAAAA,MAAM,CAACM,OAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,GAPH,EAQE;AAAEC,IAAAA,SAAS,EAAE;AAAb,GARF,CADqB,CAAvB;AAaAb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACM,OAAP,GAAiBP,KAAjB;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,cAAc,GAAGZ,OAAvB;AACA,UAAMa,eAAe,GAAGV,QAAQ,CAACK,OAAjC;;AAEA,QAAII,cAAJ,EAAoB;AAClBC,MAAAA,eAAe,CAACC,OAAhB,CAAwBF,cAAxB;AACD;;AAED,WAAO,MAAM;AACX,UAAIA,cAAJ,EAAoB;AAClBC,QAAAA,eAAe,CAACE,SAAhB,CAA0BH,cAA1B;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACZ,OAAD,CAbM,CAAT;AAcD,CAlCM;;GAAMD,iB","sourcesContent":["import { useRef, useEffect } from \"react\";\n\nexport const useInfiniteScroll = ({ element, fetch }) => {\n  const loader = useRef(fetch);\n\n  const observer = useRef(\n    new IntersectionObserver(\n      (entries) => {\n        const first = entries[0];\n        if (first.isIntersecting) {\n          loader.current();\n          console.log('Hola');\n        }\n      },\n      { threshold: 1 }\n    )\n  );\n\n  useEffect(() => {\n    loader.current = fetch;\n  }, [fetch]);\n\n  useEffect(() => {\n    const currentElement = element;\n    const currentObserver = observer.current;\n\n    if (currentElement) {\n      currentObserver.observe(currentElement);\n    }\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  }, [element]);\n};"]},"metadata":{},"sourceType":"module"}